#!/bin/bash
if [ -z ${WORKDIR} ]; then
	if [[ $0 =~ ^(.*)/[^/]+$ ]]; then
		WORKDIR=${BASH_REMATCH[1]}
	fi
	if [[ $0 == "bash" ]]; then
		WORKDIR="."
	fi
fi
if [ -z ${SDDCDIR} ]; then
	SDDCDIR=${WORKDIR}
fi
STATEDIR="${WORKDIR}/state"
if [ ! -d ${STATEDIR} ]; then
        mkdir ${STATEDIR}
fi
source ${WORKDIR}/mod.core

PARAMS=$(cat ${SDDCDIR}/params.json)
DOMAIN=$(echo "${PARAMS}" | jq -r '.domain')
SPEC=$(echo "${PARAMS}" | jq -r '.endpoints[] | select(.type=="avi")')
APIENDPOINT=$(echo "$SPEC" | jq -r '.hostname')
if [[ ! "${APIENDPOINT}" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
	if [[ ! "${APIENDPOINT}" =~ [.] ]]; then
		APIENDPOINT+=".$DOMAIN" #if not an IP or FQDN, append domain
	fi
fi
AVIUSER=$(echo "$SPEC" | jq -r '.username')
AVIPASS=$(echo "$SPEC" | jq -r '.password')
AVIONLINE=$(echo "$SPEC" | jq -r '.online')
AVISESSION="${STATEDIR}/avi.session.txt"
AVIHEADERS="${STATEDIR}/avi.headers.txt"
AVICOOKIES="${STATEDIR}/avi.cookies.txt"
AVIBASE="https://${APIENDPOINT}/api/"

function aviLogin {
	local URL="https://${APIENDPOINT}/login"
	local SESSION="${AVISESSION}"

	### DEBUG ###
	#printf "%s\n" "AVIUSER: ${AVIUSER}" 1>&2
	#printf "%s\n" "AVIPASS: ${AVIPASS}" 1>&2
	#curl -k --trace-ascii /dev/stdout -c "${AVIHEADERS}" -D "${AVICOOKIES}" -w "%{http_code}" -X POST \
	#	--data-urlencode "username=${AVIUSER}" \
	#	--data-urlencode "password=${AVIPASS}" \
	#"${URL}" 1>&2
	### DEBUG ###

	local RESPONSE=$(curl -k -c "${AVICOOKIES}" -D "${AVIHEADERS}" -w "%{http_code}" -X POST \
		--data-urlencode "username=${AVIUSER}" \
		--data-urlencode "password=${AVIPASS}" \
	"${URL}" 2>/dev/null)
	local RESULT=$(isSuccess "${RESPONSE}" "${SESSION}")
	local CODE=$(getCode "${RESPONSE}")
	if [[ $CODE =~ 2..$ ]]; then
		local HEADER="$(grep csrftoken "${AVIHEADERS}")"
		if [[ $HEADER =~ csrftoken\=([A-Za-z0-9]+) ]]; then
			local TOKEN=${BASH_REMATCH[1]}
		fi
		printf "%s\n" "${TOKEN}"
	fi
}

function aviSession {
	local SESSION=${AVISESSION}
	local ONLINE=${AVIONLINE}
	if [[ "$ONLINE" == "true" ]]; then
		local RUNFIND="$(find ${SESSION} -mmin -10 2>/dev/null)"
		if [[ -z ${RUNFIND} ]]; then
			printf "No valid session found for [$(cgreen "${APIENDPOINT}")], authenticating... " 1>&2
			local LOGIN=$(aviLogin)
			if [[ -n ${LOGIN} ]]; then
				echo "${LOGIN}" >"${SESSION}"
			fi
		fi
	fi
	printf "%s\n" "$(cat "${SESSION}" 2>/dev/null)"
}


function aviGet {
	local URL="${1}"
	local SESSION=${AVISESSION}
	local ONLINE=${AVIONLINE}
	local BASE="${AVIBASE}"
	local STATE
	if [[ $URL =~ ^http.* ]]; then
		if [[ "${ONLINE}" == "true" ]]; then
			local FILE=$(getFile "${URL}" "${BASE}")
			STATE="${STATEDIR}/avi${FILE}"
			RESPONSE=$(curl -k -b "${AVICOOKIES}" -w "%{http_code}" -X GET \
				-H "Content-Type: application/json" \
			"$URL" 2>/dev/null)
			RESULT=$(isSuccess "${RESPONSE}" "${SESSION}")
			printf "%s\n" "${RESULT}" | jq --tab . >"${STATE}"
		else
			printf "[$(ccyan "OFFLINE")] - SUCCESS\n" 1>&2
			RESULT=$(<"${URL}")
		fi
	else
		printf "[$(ccyan "CACHED")] - SUCCESS\n" 1>&2
		RESULT=$(<"${URL}")
	fi
	printf "%s\n" "${RESULT}" | jq --tab .
}

function aviPut {
	local URL="${1}"
	local BODY="${2}"
	local SESSION=${AVISESSION}
	local ONLINE=${AVIONLINE}
	local BASE="${AVIBASE}"
	local STATE
	if [[ "$ONLINE" == "true" ]]; then
		RESPONSE=$(curl -k -b "${AVICOOKIES}" -w "%{http_code}" -X PUT \
			-H "Referer: https://avic.lab01.one" \
			-H "X-Avi-Version: 20.1.5" \
			-H "X-CSRFToken: $(cat ${SESSION})" \
			-H "Content-Type: application/json" \
			--data "${BODY}" \
		"$URL" 2>/dev/null)
		RESULT=$(isSuccess "${RESPONSE}" "${SESSION}")
	else
		printf "[$(ccyan "OFFLINE")] - SUCCESS\n" 1>&2
	fi
	printf "%s\n" "${RESULT}" | jq --tab .
}

function buildURL {
	local ENDPOINT="${1}"
	local BASE="${AVIBASE}"
	local STATE="${STATEDIR}"
	local ONLINE="${AVIONLINE}"
	local FILE=$(getFile "${ENDPOINT}")
	local FURL="${STATE}/avi${FILE}"

	if [[ "$ONLINE" == "true" ]]; then
		#local RUNFIND="$(find ${FURL} -mmin -0.05 2>/dev/null)"
		#if [[ -z ${RUNFIND} ]]; then
			local SUCCESS=$(aviSession)
			if [[ -n ${SUCCESS} ]]; then
				URL="${BASE}${ENDPOINT}"
			else
				URL="" #failed to obtain valid session
			fi
		#else
		#	#printf "Last call less than 3 seconds - use local file...\n" 1>&2
		#	URL="${FURL}"
		#fi
	else
		URL="${FURL}"
	fi
	printf "$URL"
}

